{{- if .Values.executeConfig }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-execute
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: "job-execute"
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
data:
  application.yaml: |-
    app:
      code: {{ .Values.app.code }}
      secret: {{ .Values.app.secret }}
    esb:
      service:
        url: {{ .Values.esb.service.url }}
    gse:
      cache:
        apiserver:
          host: {{ .Values.gse.cacheApiServer.host }}
          port: {{ .Values.gse.cacheApiServer.port }}
      ssl:
        keystore:
          password: {{ .Values.gse.ssl.keystore.password }}
          path: {{ .Values.gse.ssl.keystore.path }}
        truststore:
          manager-type: SunX509
          password: {{ .Values.gse.ssl.truststore.password }}
          path: {{ .Values.gse.ssl.truststore.path }}
          store-type: JKS
      taskserver:
        host: {{ .Values.gse.taskserver.host }}
        port: {{ .Values.gse.taskserver.port }}
      server:
        discovery:
          type: {{ .Values.gse.server.discovery.type }}
        zookeeper:
          connect:
            string: {{ .Values.gse.server.zookeeper.connect.string }}
    iam:
      base-url: {{ .Values.iam.baseUrl }}
      system-id: bk_job
    job:
      encrypt:
        password: {{ .Values.job.encrypt.password }}
      execute:
        db:
          url: jdbc:mysql://{{- include "job.mariadb.host" . }}:{{- include "job.mariadb.port" . }}/job_execute?useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
          username: {{ include "job.mariadb.username" . }}
          {{ if .Values.externalMariaDB.existingPasswordSecret }}
          password: {{ .Values.externalMariaDB.existingPasswordKey | default "mariadb-password" | printf "${%s}" }}
          {{- else -}}
          password: ${mariadb-password}
          {{- end }}
        rabbitmq:
          host: {{ include "job.rabbitmq.host" . }}
          port: {{ include "job.rabbitmq.port" . }}
          username: {{ include "job.rabbitmq.username" . }}
          {{ if .Values.externalRabbitMQ.existingPasswordSecret }}
          password: {{ .Values.externalRabbitMQ.existingPasswordKey | default "rabbitmq-password" | printf "${%s}" }}
          {{- else -}}
          password: ${rabbitmq-password}
          {{- end }}
          vhost: {{ include "job.rabbitmq.vhost" . }}
        redis:
          mode: standalone
          host: {{ include "job.redis.host" . }}
          port: {{ include "job.redis.port" . }}
          {{ if .Values.externalRedis.existingPasswordSecret }}
          password: {{ .Values.externalRedis.existingPasswordKey | default "redis-password" | printf "${%s}" }}
          {{- else -}}
          password: ${redis-password}
          {{- end }}
          database: 0
        server:
          port: {{ .Values.executeConfig.containerPort }}
      security:
        private-key-base64: {{ .Values.job.security.privateKeyBase64 }}
        public-key-base64: {{ .Values.job.security.publicKeyBase64 }}
        actuator:
          user:
            name: {{ .Values.job.security.actuator.user.name }}
            password: {{ .Values.job.security.actuator.user.password }}
      storage:
        root-path: /data/nfs/job
      web:
        url: {{ printf "%s://%s" .Values.frontendConfig.web.scheme .Values.frontendConfig.web.domain }}
{{- end}}
